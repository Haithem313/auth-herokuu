####### Mongo Properties ###########
spring.data.mongodb.uri=mongodb://localhost:27017/oauthdeux
eureka.client.serviceUrl.defaultZone  = https://eureka-server-cz.herokuapp.com/eureka/
eureka.client.instance.preferIpAddress = true
spring.application.name = auth-herokuu
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.main.allow-circular-references=true
#spring.security.user.name=admin
#spring.security.user.password=admin
server.port=8087
#eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#jwt.secret='[a-zA-Z0-9._]^+$Guidelines89797987forAlphabeticalArraNumeralsandOtherSymbo$'


#https://eureka-server-cz.herokuapp.com/eureka/

courzelo.app.jwtSecret=926D96C90030DD58429D2751AC1BDBBC
courzelo.app.jwtExpirationMs= 864000000


spring.mail.host=smtp.gmail.com
spring.mail.username=haithemelmetoui313@gmail.com
spring.mail.password=ctyktioztxloiunr
spring.mail.port=587
#mail.smtp.starttls.enable=true
#mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

#smtp.ssl=yes
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true

spring.security.oauth2.client.registration.google.clientId=54089800826-fmsdhoj22rcb2l6q5pcm6ifg3cd043vs.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.facebook.clientId=531077388577659
spring.security.oauth2.client.registration.facebook.clientSecret=b988cad1ba7da68702f362454ada5ee9
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture
spring.security.oauth2.client.registration.github.clientId=ab83cc7a9478d6982fcd
spring.security.oauth2.client.registration.github.clientSecret=a6346849c2164d6d68ad513ec8c52212d6e6e6d1
spring.security.oauth2.client.registration.linkedin.clientId=<your-client-id>
spring.security.oauth2.client.registration.linkedin.clientSecret=<your-client-secret>
spring.security.oauth2.client.registration.linkedin.client-authentication-method=post
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile, r_emailaddress
spring.security.oauth2.client.registration.linkedin.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.linkedin.client-name=Linkedin
spring.security.oauth2.client.registration.linkedin.provider=linkedin
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.user-name-attribute=id
linkedin.email-address-uri=https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))

app.oauth2.authorizedRedirectUris=http://localhost:4200/oauth2/redirect
#,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect
#logging.level.org.springframework=TRACE


